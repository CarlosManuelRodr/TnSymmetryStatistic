{
  "name": "Tn Symmetry Statistic",
  "tagline": "Distribution-free statistic test.",
  "body": "# Tn Symmetry Statistic\r\n\r\nThis code implements the Tn Symmetry Statistic test described in *Coronel-Brizio, H.F.; Hernandez-Montoya, A.R.; Rodriguez-Achach, M.E. and R. Huerta-Quintanilla\r\n(2007): Assesing Symmetry of Financial Return Series. Physica A. 383, 5-9.*\r\n\r\nIf you use this program for academic purposes, please cite as:\r\n\r\n\tC.M. Rodriguez-Martinez, H.F. Coronel-Brizio (2016) Tn Symmetry Statistic [Computer program]. Available at: http://github.com/CarlosManuelRodr/TnSymmetryStatistic\r\n\r\n# Download\r\nBinaries for Windows can be found [here](https://github.com/CarlosManuelRodr/TnSymmetryStatistic/releases/tag/1.0)\r\n\r\nOn Linux/UNIX there are no binary releases available. Clone the repository using\r\n\r\n\tgit clone https://github.com/CarlosManuelRodr/TnSymmetryStatistic\r\n\r\nand then compile. For instructions about how to compile, please refer to the compilation instructions.\r\n\r\n\r\n# Instructions\r\nTn Symmetry Statistic comes with three backends. The command line interface (CLI), a graphical user interface (GUI) and a Mathematica implementation and a separate MathLink for faster performance.\r\n\r\nThe GUI provides an easy interface for simple uses\r\n\r\n![GUI Screenshot](https://raw.githubusercontent.com/CarlosManuelRodr/TnSymmetryStatistic/master/images/Tn.png)\r\n\r\nAnd it also has an integrated plotter for easy preview of the results\r\n\r\n![Plotter Screenshot](https://raw.githubusercontent.com/CarlosManuelRodr/TnSymmetryStatistic/master/images/result.png)\r\n\r\nThe instructions for the CLI are the following.\r\n\r\n\tINSTRUCTIONS: TnStatistic [options]\r\n\t\r\n\t  --data_file=<arg>  Path to file with data.\r\n\t  --data=<arg>       Data as a list. E.g: -3,-2,-1,0,1,2.\r\n\t  --c=<arg>          Point of symmetry.\r\n\t  --alpha=<arg>      Alpha value for upper percentage point calculation. By\r\n\t                     default is 0.01, 0.05 and 0.1.\r\n\t  --calc_interval    Calculate Tn for an interval of c. Requires to specify\r\n\t                     cmin, cmax and deltac.\r\n\t  --cmin=<arg>       Minimum value of c. Default value is -1.\r\n\t  --cmax=<arg>       Maximum value of c. Default value is 1.\r\n\t  --deltac=<arg>     Step interval of c. Default value is 0.01.\r\n\t  --out_file=<arg>   Path to the output file.\r\n\t  --help             Show instructions.\r\n\r\nFor example, to test the symmetry around zero for the points (-4, -3, -2, -1, 0, 1, 2 ,3) , the command is:\r\n\r\n\tTnStatisticCLI --data=-4,-3,-2,-1,0,1,2,3 --c=0\r\n\r\nAnd to test the symmetry from c=-1 to c=1 using steps of size 0.1 the command is:\r\n\r\n\tTnStatisticCLI --data=-4,-3,-2,-1,0,1,2,3 --calc_interval --cmin=-1 --cmax=1, --deltac=0.1\r\n\r\n\r\n\r\n\r\nBoth the CLI and the GUI accept data from .dat files in which data is structured in columns, for example:\r\n\r\n\t-4\r\n\t-3\r\n\t-2\r\n\t-1\r\n\t0\r\n\t1\r\n\t2\r\n\t3\r\n\r\nor .csv files, in which data is separated by commas\r\n\r\n\t-4,-3,-2,-1,0,1,2,3 \r\n\r\n\r\n\r\n# Compilation instructions\r\n\r\n### CLI\r\nFor the command line interface you can compile using\r\n\r\n```\r\nmake\r\n```\r\n\r\nIt requires a C++11 compatible compiler (GCC >= 4.8).\r\n\r\nOn Windows you can use the Visual Studio project file.\r\n\r\n### GUI\r\nThe graphical user interface uses the QT toolkit, and it requires the host to have installed the development files.  In Ubuntu based distros the package \r\n\r\n\tqtbase5-dev\r\n\r\ninstalls all the required dependencies. Then you can compile using\r\n\r\n\tqmake && make\r\n\r\n### Mathematica\r\nThere are two Mathematica compatible implementations. The first is implemented directly in the Wolfram Language on the file *SymmetryTest.nb*. A much faster implementation is made using the MathLink binding.\r\n\r\nTo compile the Mathlink version you can use the makefile on Linux or the project file on Windows.\r\n\r\nSince the neccesary MathLink file may be installed elsewhere on your system, you may need to change the line\r\n\r\n```\r\nMLINKDIR = /opt/Mathematica/SystemFiles/Links/MathLink/DeveloperKit/Linux-x86-64\r\n```\r\n\r\non the makefile to your Mathematica installation path. On Windows you may need to do the equivalent step but changing the paths on the VS project file.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}